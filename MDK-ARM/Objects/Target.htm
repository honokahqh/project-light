<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Target.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Target.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Tue Aug  6 16:51:31 2024
<BR><P>
<H3>Maximum Stack Usage =        328 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; $Super$$main &rArr; timer1_init &rArr; LL_TIM_OC_Init &rArr; OC4Config &rArr; LL_TIM_OC_SetCompareCH4
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">DMA1_Channel1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC_COMP_IRQHandler</a> from bsp_driver.o(.text.ADC_COMP_IRQHandler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[c]">EXTI0_1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[d]">EXTI2_3_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[e]">EXTI4_15_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[a]">FLASH_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from xl32f0xx_it.o(.text.HardFault_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[15]">LPTIM1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from xl32f0xx_it.o(.text.NMI_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[8]">PVD_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from xl32f0xx_it.o(.text.PendSV_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[b]">RCC_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[9]">RTC_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from xl32f0xx_it.o(.text.SVC_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from xl32f0xx_it.o(.text.SysTick_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1e]">SystemInit</a> from system_xl32f0xx.o(.text.SystemInit) referenced from startup_xl32f003x6.o(.text)
 <LI><a href="#[16]">TIM14_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[17]">TIM16_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[18]">TIM17_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[12]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[14]">TIM3_IRQHandler</a> from bsp_driver.o(.text.TIM3_IRQHandler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1b]">USART1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1c]">USART2_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[7]">WWDG_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_xl32f003x6.o(.text)
 <LI><a href="#[1d]">main</a> from system_xl32f0xx.o(.text.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[0]">setGPIOState</a> from segment_driver.o(.text.setGPIOState) referenced 14 times from segment_driver.o(.data.gpioConfigs)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[20]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[aa]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature_noRecord
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature_noRecord
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature_noRecord
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature_noRecord
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_InitTick
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_idiv
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputNumber
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_idivmod</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, idiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upDownkey_process
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeKey_process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightModePeriodProcess
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputNumber
</UL>

<P><STRONG><a name="[ab]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[23]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[21]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ac]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>main</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, system_xl32f0xx.o(.text.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = main &rArr; $Super$$main &rArr; timer1_init &rArr; LL_TIM_OC_Init &rArr; OC4Config &rArr; LL_TIM_OC_SetCompareCH4
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[11]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.ADC_COMP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_COMP_IRQHandler &rArr; APP_AdcGrpRegularUnitaryConvCompleteCallback &rArr; LL_ADC_REG_ReadConversionData12
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_ClearFlag_EOC
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsActiveFlag_EOC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>ADC_init</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, bsp_driver.o(.text.ADC_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ADC_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_EnableIT_EOC
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetSequencerChannels
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetSequencerDiscont
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetOverrun
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetDMATransfer
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetContinuousMode
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetTriggerSource
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetSamplingTimeCommonChannels
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetLowPowerMode
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetResolution
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetClock
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetCommonPathInternalCh
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_Reset
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[45]"></a>ADC_start</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_driver.o(.text.ADC_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_start &rArr; LL_ADC_REG_StartConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_StartConversion
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_Enable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsCalibrationOnGoing
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_StartCalibration
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[30]"></a>APP_AdcGrpRegularUnitaryConvCompleteCallback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_driver.o(.text.APP_AdcGrpRegularUnitaryConvCompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = APP_AdcGrpRegularUnitaryConvCompleteCallback &rArr; LL_ADC_REG_ReadConversionData12
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_ReadConversionData12
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>

<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, xl32f0xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>IWDG_Config</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_driver.o(.text.IWDG_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IWDG_Config &rArr; LL_IWDG_SetReloadCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IWDG_ReloadCounter
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IWDG_IsReady
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IWDG_SetReloadCounter
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IWDG_SetPrescaler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IWDG_EnableWriteAccess
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IWDG_Enable
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_LSI_IsReady
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_LSI_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[5b]"></a>LL_GPIO_Init</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, xl32f0xx_ll_gpio.o(.text.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_GPIO_Init &rArr; LL_GPIO_SetPinOutputType
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinOutputType
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetAFPin_8_15
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetAFPin_0_7
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinPull
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinSpeed
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[62]"></a>LL_Init1msTick</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, xl32f0xx_ll_utils.o(.text.LL_Init1msTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LL_Init1msTick &rArr; LL_InitTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[7c]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, xl32f0xx_ll_utils.o(.text.LL_SetSystemCoreClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_SetSystemCoreClock
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[65]"></a>LL_TIM_Init</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_TIM_Init &rArr; LL_TIM_SetRepetitionCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_GenerateEvent_UPDATE
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_SetRepetitionCounter
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_SetPrescaler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_SetAutoReload
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[6a]"></a>LL_TIM_OC_Init</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LL_TIM_OC_Init &rArr; OC4Config &rArr; LL_TIM_OC_SetCompareCH4
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC4Config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC3Config
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC2Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[a2]"></a>LL_TIM_OC_StructInit</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_OC_StructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_TIM_OC_StructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[97]"></a>LL_mDelay</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, xl32f0xx_ll_utils.o(.text.LL_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xl32f0xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xl32f0xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xl32f0xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xl32f0xx_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SysTick_Handler &rArr; lightModePeriodProcess &rArr; setTemperature_noRecord &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightModePeriodProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SystemInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_xl32f0xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>System_Run</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app.o(.text.System_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = System_Run &rArr; Task_100ms_process &rArr; enableKey_process &rArr; setTemperature &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[14]"></a>TIM3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_driver.o(.text.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TIM3_IRQHandler &rArr; controlSegment &rArr; setSegmentOn &rArr; LL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlSegment
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_ClearFlag_UPDATE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>closeSegment</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, segment_driver.o(.text.closeSegment))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = closeSegment &rArr; setSegmentOff &rArr; LL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSegmentOff
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
</UL>

<P><STRONG><a name="[80]"></a>controlSegment</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, segment_driver.o(.text.controlSegment))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = controlSegment &rArr; setSegmentOn &rArr; LL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSegmentOn
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[90]"></a>gpio_init</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, bsp_driver.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = gpio_init &rArr; LL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ResetOutputPin
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinPull
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinOutputType
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinSpeed
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[81]"></a>inputNumber</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, segment_driver.o(.text.inputNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = inputNumber &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idiv
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upDownkey_process
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeKey_process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[73]"></a>lightModePeriodProcess</STRONG> (Thumb, 412 bytes, Stack size 16 bytes, bsp_driver.o(.text.lightModePeriodProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = lightModePeriodProcess &rArr; setTemperature_noRecord &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature_noRecord
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLightOff
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2d]"></a>$Super$$main</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = $Super$$main &rArr; timer1_init &rArr; LL_TIM_OC_Init &rArr; OC4Config &rArr; LL_TIM_OC_SetCompareCH4
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Run
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPA14_PA15_Mode
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLightOff
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputNumber
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IWDG_ReloadCounter
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>millis</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.millis))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[4f]"></a>setBatteryLevel</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, segment_driver.o(.text.setBatteryLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setBatteryLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
</UL>

<P><STRONG><a name="[a0]"></a>setColdLightDutyCycle</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, bsp_driver.o(.text.setColdLightDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = setColdLightDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature_noRecord
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
</UL>

<P><STRONG><a name="[0]"></a>setGPIOState</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, segment_driver.o(.text.setGPIOState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setGPIOState &rArr; LL_GPIO_ResetOutputPin
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ResetOutputPin
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetOutputPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> segment_driver.o(.data.gpioConfigs)
</UL>
<P><STRONG><a name="[8e]"></a>setLightOff</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_driver.o(.text.setLightOff))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightModePeriodProcess
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[83]"></a>setMode</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, segment_driver.o(.text.setMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = setMode
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeKey_process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[8d]"></a>setPA14_PA15_Mode</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, bsp_driver.o(.text.setPA14_PA15_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setPA14_PA15_Mode &rArr; LL_GPIO_SetAFPin_8_15
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetAFPin_8_15
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinPull
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[8b]"></a>setSegmentOff</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, segment_driver.o(.text.setSegmentOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = setSegmentOff &rArr; LL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closeSegment
</UL>

<P><STRONG><a name="[8c]"></a>setSegmentOn</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, segment_driver.o(.text.setSegmentOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = setSegmentOn &rArr; LL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ResetOutputPin
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetOutputPin
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlSegment
</UL>

<P><STRONG><a name="[82]"></a>setTemperature</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, bsp_driver.o(.text.setTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setTemperature &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setColdLightDutyCycle
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmLightDutyCycle
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upDownkey_process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[96]"></a>setTemperature_noRecord</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, bsp_driver.o(.text.setTemperature_noRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = setTemperature_noRecord &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setColdLightDutyCycle
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWarmLightDutyCycle
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lightModePeriodProcess
</UL>

<P><STRONG><a name="[9f]"></a>setWarmLightDutyCycle</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, bsp_driver.o(.text.setWarmLightDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = setWarmLightDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature_noRecord
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
</UL>

<P><STRONG><a name="[98]"></a>timer1_init</STRONG> (Thumb, 364 bytes, Stack size 224 bytes, bsp_driver.o(.text.timer1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = timer1_init &rArr; LL_TIM_OC_Init &rArr; OC4Config &rArr; LL_TIM_OC_SetCompareCH4
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_StructInit
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_EnableIT_UPDATE
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_EnableCounter
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_EnableClock
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[af]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[74]"></a>SystemClock_Config</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemClock_Config &rArr; LL_Init1msTick &rArr; LL_InitTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetAPB1Prescaler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSysClkSource
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetSysClkSource
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetAHBPrescaler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_IsReady
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_SetCalibFreq
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[99]"></a>LL_GPIO_IsInputPinSet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(.text.LL_GPIO_IsInputPinSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_IsInputPinSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[9a]"></a>LL_IWDG_ReloadCounter</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, main.o(.text.LL_IWDG_ReloadCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[75]"></a>LL_RCC_HSI_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_RCC_HSI_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[76]"></a>LL_RCC_HSI_SetCalibFreq</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, main.o(.text.LL_RCC_HSI_SetCalibFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_RCC_HSI_SetCalibFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[77]"></a>LL_RCC_HSI_IsReady</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_RCC_HSI_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[78]"></a>LL_RCC_SetAHBPrescaler</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, main.o(.text.LL_RCC_SetAHBPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_RCC_SetAHBPrescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[79]"></a>LL_RCC_SetSysClkSource</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, main.o(.text.LL_RCC_SetSysClkSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_RCC_SetSysClkSource
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[7a]"></a>LL_RCC_GetSysClkSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_RCC_GetSysClkSource))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[7b]"></a>LL_RCC_SetAPB1Prescaler</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, main.o(.text.LL_RCC_SetAPB1Prescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_RCC_SetAPB1Prescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[33]"></a>LL_IOP_GRP1_EnableClock</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_IOP_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[91]"></a>LL_GPIO_SetPinSpeed</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, bsp_driver.o(.text.LL_GPIO_SetPinSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[92]"></a>LL_GPIO_SetPinOutputType</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, bsp_driver.o(.text.LL_GPIO_SetPinOutputType))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinOutputType
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[93]"></a>LL_GPIO_SetPinPull</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, bsp_driver.o(.text.LL_GPIO_SetPinPull))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinPull
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPA14_PA15_Mode
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[34]"></a>LL_GPIO_SetPinMode</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, bsp_driver.o(.text.LL_GPIO_SetPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPA14_PA15_Mode
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[94]"></a>LL_GPIO_ResetOutputPin</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_GPIO_ResetOutputPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_ResetOutputPin
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[9d]"></a>LL_GPIO_SetAFPin_8_15</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, bsp_driver.o(.text.LL_GPIO_SetAFPin_8_15))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetAFPin_8_15
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPA14_PA15_Mode
</UL>

<P><STRONG><a name="[35]"></a>LL_APB1_GRP2_EnableClock</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_APB1_GRP2_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[a1]"></a>LL_APB1_GRP1_EnableClock</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_APB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_APB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[a3]"></a>LL_TIM_EnableCounter</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_TIM_EnableCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_TIM_EnableCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[a4]"></a>LL_TIM_EnableIT_UPDATE</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_TIM_EnableIT_UPDATE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_TIM_EnableIT_UPDATE
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[44]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, bsp_driver.o(.text.NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[43]"></a>NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bsp_driver.o(.text.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[7f]"></a>LL_TIM_ClearFlag_UPDATE</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_TIM_ClearFlag_UPDATE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_TIM_ClearFlag_UPDATE
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>LL_RCC_LSI_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_driver.o(.text.LL_RCC_LSI_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[52]"></a>LL_RCC_LSI_IsReady</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_driver.o(.text.LL_RCC_LSI_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[53]"></a>LL_IWDG_Enable</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_IWDG_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[54]"></a>LL_IWDG_EnableWriteAccess</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_IWDG_EnableWriteAccess))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_IWDG_EnableWriteAccess
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[55]"></a>LL_IWDG_SetPrescaler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_IWDG_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_IWDG_SetPrescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[56]"></a>LL_IWDG_SetReloadCounter</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_IWDG_SetReloadCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_IWDG_SetReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[57]"></a>LL_IWDG_IsReady</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_IWDG_IsReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_IWDG_IsReady
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[58]"></a>LL_IWDG_ReloadCounter</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_IWDG_ReloadCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[32]"></a>LL_ADC_Reset</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, bsp_driver.o(.text.LL_ADC_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_ADC_Reset &rArr; LL_APB1_GRP2_ReleaseReset
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_ReleaseReset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_ForceReset
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[36]"></a>LL_ADC_IsEnabled</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_start
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[37]"></a>LL_ADC_SetCommonPathInternalCh</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_SetCommonPathInternalCh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetCommonPathInternalCh
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[38]"></a>LL_ADC_SetClock</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_SetClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetClock
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[39]"></a>LL_ADC_SetResolution</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_SetResolution))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetResolution
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3a]"></a>LL_ADC_SetLowPowerMode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_SetLowPowerMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetLowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3b]"></a>LL_ADC_SetSamplingTimeCommonChannels</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_SetSamplingTimeCommonChannels))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetSamplingTimeCommonChannels
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3c]"></a>LL_ADC_REG_SetTriggerSource</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_REG_SetTriggerSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_REG_SetTriggerSource
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3d]"></a>LL_ADC_REG_SetContinuousMode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_REG_SetContinuousMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_REG_SetContinuousMode
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3e]"></a>LL_ADC_REG_SetDMATransfer</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_REG_SetDMATransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_REG_SetDMATransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3f]"></a>LL_ADC_REG_SetOverrun</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_REG_SetOverrun))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_REG_SetOverrun
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[40]"></a>LL_ADC_REG_SetSequencerDiscont</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_REG_SetSequencerDiscont))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_REG_SetSequencerDiscont
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[41]"></a>LL_ADC_REG_SetSequencerChannels</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_driver.o(.text.LL_ADC_REG_SetSequencerChannels))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_REG_SetSequencerChannels
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[42]"></a>LL_ADC_EnableIT_EOC</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_EnableIT_EOC))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_EnableIT_EOC
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[59]"></a>LL_APB1_GRP2_ForceReset</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_APB1_GRP2_ForceReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_APB1_GRP2_ForceReset
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_Reset
</UL>

<P><STRONG><a name="[5a]"></a>LL_APB1_GRP2_ReleaseReset</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_APB1_GRP2_ReleaseReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_APB1_GRP2_ReleaseReset
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_Reset
</UL>

<P><STRONG><a name="[46]"></a>LL_ADC_StartCalibration</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_StartCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_StartCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_start
</UL>

<P><STRONG><a name="[47]"></a>LL_ADC_IsCalibrationOnGoing</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_IsCalibrationOnGoing))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_IsCalibrationOnGoing
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_start
</UL>

<P><STRONG><a name="[48]"></a>LL_ADC_Enable</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_start
</UL>

<P><STRONG><a name="[49]"></a>LL_ADC_REG_StartConversion</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_REG_StartConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_REG_StartConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_start
</UL>

<P><STRONG><a name="[4a]"></a>LL_ADC_REG_ReadConversionData12</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_REG_ReadConversionData12))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_REG_ReadConversionData12
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
</UL>

<P><STRONG><a name="[2e]"></a>LL_ADC_IsActiveFlag_EOC</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_IsActiveFlag_EOC))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_IsActiveFlag_EOC
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>

<P><STRONG><a name="[2f]"></a>LL_ADC_ClearFlag_EOC</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, bsp_driver.o(.text.LL_ADC_ClearFlag_EOC))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_ClearFlag_EOC
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>

<P><STRONG><a name="[5c]"></a>LL_GPIO_SetPinMode</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, xl32f0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[5d]"></a>LL_GPIO_SetPinSpeed</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, xl32f0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[5e]"></a>LL_GPIO_SetPinPull</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, xl32f0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinPull
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[5f]"></a>LL_GPIO_SetAFPin_0_7</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, xl32f0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetAFPin_0_7
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[60]"></a>LL_GPIO_SetAFPin_8_15</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, xl32f0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetAFPin_8_15
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[61]"></a>LL_GPIO_SetPinOutputType</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, xl32f0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinOutputType
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[66]"></a>LL_TIM_SetAutoReload</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_SetAutoReload))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_TIM_SetAutoReload
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>

<P><STRONG><a name="[67]"></a>LL_TIM_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_TIM_SetPrescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>

<P><STRONG><a name="[68]"></a>LL_TIM_SetRepetitionCounter</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_TIM_SetRepetitionCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>

<P><STRONG><a name="[69]"></a>LL_TIM_GenerateEvent_UPDATE</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_TIM_GenerateEvent_UPDATE
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>

<P><STRONG><a name="[6b]"></a>OC1Config</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, xl32f0xx_ll_tim.o(.text.OC1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OC1Config &rArr; LL_TIM_OC_SetCompareCH1
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH1
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[6c]"></a>OC2Config</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, xl32f0xx_ll_tim.o(.text.OC2Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OC2Config &rArr; LL_TIM_OC_SetCompareCH2
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH2
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[6d]"></a>OC3Config</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, xl32f0xx_ll_tim.o(.text.OC3Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OC3Config &rArr; LL_TIM_OC_SetCompareCH3
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH3
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[6e]"></a>OC4Config</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, xl32f0xx_ll_tim.o(.text.OC4Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OC4Config &rArr; LL_TIM_OC_SetCompareCH4
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH4
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[6f]"></a>LL_TIM_OC_SetCompareCH1</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_TIM_OC_SetCompareCH1
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC1Config
</UL>

<P><STRONG><a name="[70]"></a>LL_TIM_OC_SetCompareCH2</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_TIM_OC_SetCompareCH2
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC2Config
</UL>

<P><STRONG><a name="[71]"></a>LL_TIM_OC_SetCompareCH3</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_TIM_OC_SetCompareCH3
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC3Config
</UL>

<P><STRONG><a name="[72]"></a>LL_TIM_OC_SetCompareCH4</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xl32f0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_TIM_OC_SetCompareCH4
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC4Config
</UL>

<P><STRONG><a name="[63]"></a>LL_InitTick</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, xl32f0xx_ll_utils.o(.text.LL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_InitTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>

<P><STRONG><a name="[7e]"></a>Task_100ms_process</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, app.o(.text.Task_100ms_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Task_100ms_process &rArr; enableKey_process &rArr; setTemperature &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IWDG_ReloadCounter
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upDownkey_process
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeKey_process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetOutputPin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_start
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputNumber
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Run
</UL>

<P><STRONG><a name="[4b]"></a>Bat_process</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, app.o(.text.Bat_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Bat_process &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBatteryLevel
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[84]"></a>LL_GPIO_SetOutputPin</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app.o(.text.LL_GPIO_SetOutputPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_SetOutputPin
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[85]"></a>enableKey_process</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, app.o(.text.enableKey_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = enableKey_process &rArr; setTemperature &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closeSegment
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ResetOutputPin
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetOutputPin
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPA14_PA15_Mode
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLightOff
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputNumber
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[86]"></a>modeKey_process</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, app.o(.text.modeKey_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = modeKey_process &rArr; inputNumber &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMode
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputNumber
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[87]"></a>upDownkey_process</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, app.o(.text.upDownkey_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = upDownkey_process &rArr; setTemperature &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTemperature
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inputNumber
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[88]"></a>LL_IWDG_ReloadCounter</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, app.o(.text.LL_IWDG_ReloadCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_100ms_process
</UL>

<P><STRONG><a name="[4c]"></a>LL_GPIO_IsInputPinSet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app.o(.text.LL_GPIO_IsInputPinSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_IsInputPinSet
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upDownkey_process
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeKey_process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bat_process
</UL>

<P><STRONG><a name="[8f]"></a>LL_GPIO_ResetOutputPin</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app.o(.text.LL_GPIO_ResetOutputPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_ResetOutputPin
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_process
</UL>

<P><STRONG><a name="[9b]"></a>LL_GPIO_SetOutputPin</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, segment_driver.o(.text.LL_GPIO_SetOutputPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_SetOutputPin
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSegmentOn
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGPIOState
</UL>

<P><STRONG><a name="[9c]"></a>LL_GPIO_ResetOutputPin</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, segment_driver.o(.text.LL_GPIO_ResetOutputPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_ResetOutputPin
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSegmentOn
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGPIOState
</UL>

<P><STRONG><a name="[9e]"></a>LL_GPIO_SetPinMode</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, segment_driver.o(.text.LL_GPIO_SetPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSegmentOn
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSegmentOff
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
